<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.example.infrastructure.persistent.dao.IRaffleActivityAccountDao">

    <resultMap id="RaffleActivityAccountMap" type="org.example.infrastructure.persistent.po.RaffleActivityAccount">
        <id column="id" property="id"/>
        <result column="user_id" property="userId"/>
        <result column="activity_id" property="activityId"/>
        <result column="total_count" property="totalCount"/>
        <result column="total_count_surplus" property="totalCountSurplus"/>
        <result column="day_count" property="dayCount"/>
        <result column="day_count_surplus" property="dayCountSurplus"/>
        <result column="month_count" property="monthCount"/>
        <result column="month_count_surplus" property="monthCountSurplus"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
    </resultMap>
    <insert id="insert" parameterType="org.example.infrastructure.persistent.po.RaffleActivityAccount">
        insert into raffle_activity_account
        (user_id, activity_id, total_count, total_count_surplus, day_count,
        day_count_surplus, month_count, month_count_surplus, create_time, update_time)
        values
        (#{userId}, #{activityId}, #{totalCount}, #{totalCountSurplus}, #{dayCount},
        #{dayCountSurplus}, #{monthCount}, #{monthCountSurplus}, now(), now())
    </insert>
    <update id="updateAccountSubtractionQuota" parameterType="org.example.infrastructure.persistent.po.RaffleActivityAccount">
        UPDATE `raffle_activity_account`
        SET
        total_count_surplus=total_count_surplus-1,
        day_count_surplus=day_count_surplus-1,
        month_count_surplus=month_count_surplus-1
        WHERE user_id=#{userId} AND activity_id=#{activityId}
    </update>
    <update id="updateAccountQuota" parameterType="org.example.infrastructure.persistent.po.RaffleActivityAccount"
    >
        update raffle_activity_account
        set
        total_count = total_count + #{totalCount},
        total_count_surplus = total_count_surplus + #{totalCountSurplus},
        day_count_surplus = day_count_surplus + #{dayCountSurplus},
        day_count = day_count + #{dayCount},
        month_count_surplus = month_count_surplus + #{monthCountSurplus},
        month_count = month_count + #{monthCount},
        update_time = now()
        where user_id = #{userId} and activity_id = #{activityId}
    </update>
    <update id="AddCount">
        update raffle_activity_account
        set
        total_count = total_count + #{count},
        total_count_surplus = total_count_surplus + #{count},
        day_count_surplus = day_count_surplus + #{count},
        day_count = day_count + #{count},
        month_count_surplus = month_count_surplus + #{count},
        month_count = month_count + #{count},
        update_time = now()
        where user_id = #{userId} and activity_id = #{activityId}

    </update>
    <select id="queryActivityAccountByUserId" resultMap="RaffleActivityAccountMap">
        select user_id, activity_id, total_count, total_count_surplus, day_count,
        day_count_surplus, month_count, month_count_surplus
        from raffle_activity_account
        where user_id = #{userId} and activity_id = #{activityId}
    </select>
    <select id="queryUserDrawTotalCount" resultType="java.lang.Integer">

    </select>
    <select id="queryActivityAccountEntity" resultMap="RaffleActivityAccountMap">
        SELECT *
        FROM `raffle_activity_account`
        WHERE user_id=#{userId} AND activity_id=#{activityId}
    </select>


</mapper>